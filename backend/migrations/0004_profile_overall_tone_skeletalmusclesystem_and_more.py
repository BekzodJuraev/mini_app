# Generated by Django 4.2.4 on 2025-03-15 07:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0003_profile_balance'),
    ]

    operations = [
        migrations.AddField(
            model_name='profile',
            name='Overall_tone',
            field=models.IntegerField(default=0),
        ),
        migrations.CreateModel(
            name='SkeletalMuscleSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skeleton', models.IntegerField(default=0, verbose_name='Скелет')),
                ('muscles', models.IntegerField(default=0, verbose_name='Мышцы')),
                ('protection', models.IntegerField(default=0, verbose_name='Защита')),
                ('joint_flexibility', models.IntegerField(default=0, verbose_name='Гибкость суставов')),
                ('shock_absorption', models.IntegerField(default=0, verbose_name='Амортизация')),
                ('spine', models.IntegerField(default=0, verbose_name='Позвоночник')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='skelet', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Опорно-двигательная система',
                'verbose_name_plural': 'Опорно-двигательная система',
            },
        ),
        migrations.CreateModel(
            name='SensorySystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sensor', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Сенсорная система',
                'verbose_name_plural': 'Сенсорные системы',
            },
        ),
        migrations.CreateModel(
            name='RespiratorySystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lungs', models.IntegerField(default=0, verbose_name='Легкие')),
                ('trachea', models.IntegerField(default=0, verbose_name='Трахея')),
                ('nasopharynx', models.IntegerField(default=0, verbose_name='Носоглотка')),
                ('bronchi', models.IntegerField(default=0, verbose_name='Бронхи')),
                ('ribs', models.IntegerField(default=0, verbose_name='Рёбра')),
                ('diaphragm', models.IntegerField(default=0, verbose_name='Диафрагма')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='res', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Дыхательная система',
                'verbose_name_plural': 'Дыхательная система',
            },
        ),
        migrations.CreateModel(
            name='MentalHealthSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mental', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Психическое здоровье',
                'verbose_name_plural': 'Психическое здоровье',
            },
        ),
        migrations.CreateModel(
            name='ImmuneSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='immune', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Иммунная система',
                'verbose_name_plural': 'Иммунные системы',
            },
        ),
        migrations.CreateModel(
            name='HematopoieticMetabolicSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hemato', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Кроветворение и обмен',
                'verbose_name_plural': 'Кроветворение и обмен',
            },
        ),
        migrations.CreateModel(
            name='ExcretorySystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='excretor', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Выделительная система',
                'verbose_name_plural': 'Выделительные системы',
            },
        ),
        migrations.CreateModel(
            name='EndocrineSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thyroid_gland', models.IntegerField(default=0, verbose_name='Щитовидная железа')),
                ('pineal_gland', models.IntegerField(default=0, verbose_name='Шишковидная железа')),
                ('adrenal_glands', models.IntegerField(default=0, verbose_name='Надпочечники')),
                ('pancreas', models.IntegerField(default=0, verbose_name='Поджелудочная железа')),
                ('thymus', models.IntegerField(default=0, verbose_name='Вилочковая железа')),
                ('sex_gland', models.IntegerField(default=0, verbose_name='Половые железы')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='endoc', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Эндокринная система',
                'verbose_name_plural': 'Эндокринные системы',
            },
        ),
        migrations.CreateModel(
            name='DigestiveSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('esophagus', models.IntegerField(default=0, verbose_name='Пищевод')),
                ('liver', models.IntegerField(default=0, verbose_name='Печень')),
                ('stomach', models.IntegerField(default=0, verbose_name='Желудок')),
                ('large_intestine', models.IntegerField(default=0, verbose_name='Толстый кишечник')),
                ('small_intestine', models.IntegerField(default=0, verbose_name='Тонкий кишечник')),
                ('oral_cavity', models.IntegerField(default=0, verbose_name='Ротовая полость')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='digestive', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Пищеварительная система',
                'verbose_name_plural': 'Пищеварительные системы',
            },
        ),
        migrations.CreateModel(
            name='DentalJawSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dental', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Зубочелюстная система',
                'verbose_name_plural': 'Зубочелюстные системы',
            },
        ),
        migrations.CreateModel(
            name='CardiovascularSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pulse', models.IntegerField(default=0, verbose_name='Пульс')),
                ('systolic_pressure', models.IntegerField(default=0, verbose_name='Систолическое давление')),
                ('diastolic_pressure', models.IntegerField(default=0, verbose_name='Диастолическое давление')),
                ('total_rank', models.IntegerField(default=0, verbose_name='Общий рейтинг')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cardi', to='backend.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Сердечно-сосудистая система',
                'verbose_name_plural': 'Сердечно-сосудистая система',
            },
        ),
    ]
